version: '3.8'

services:
  app:
    container_name: app
    build:
      context: .
    ports:
      - '${APP_PORT}:3000'
    depends_on:
      - mongodb
      - rabbitmq
      - elasticsearch
    networks:
      - mynetwork

  mongodb:
    container_name: mongodb
    image: mongo:8.0
    ports:
      - '${DATABASE_PORT}:27017'
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${DATABASE_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${DATABASE_PASS}
      - MONGO_INITDB_DATABASE=${DATABASE_NAME}
    volumes:
      - mongodb_data:/data/db
    networks:
      - mynetwork

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:4.0.5
    ports:
      - '${MQ_PORT}:5672'
      - '${MQ_ADMIN_PORT}:15672'
    environment:
      RABBITMQ_DEFAULT_USER: ${MQ_USER}
      RABBITMQ_DEFAULT_PASS: ${MQ_PASS}
      RABBITMQ_DEFAULT_VHOST: ${MQ_VHOST}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - mynetwork

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.6.2
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - '${ELASTICSEARCH_PORT}:9200'
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - mynetwork

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:8.6.2
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - '${KIBANA_PORT}:5601'
    volumes:
      - kibana_data:/usr/share/kibana/data
    networks:
      - mynetwork

networks:
  mynetwork:
    driver: bridge

volumes:
  mongodb_data:
  rabbitmq_data:
  elasticsearch_data:
  kibana_data:
